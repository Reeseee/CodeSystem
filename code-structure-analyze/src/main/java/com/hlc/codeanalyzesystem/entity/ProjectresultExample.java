package com.hlc.codeanalyzesystem.entity;

import java.util.ArrayList;
import java.util.List;

public class ProjectresultExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table projectresult
     *
     * @mbg.generated Wed Mar 09 17:38:48 CST 2022
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table projectresult
     *
     * @mbg.generated Wed Mar 09 17:38:48 CST 2022
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table projectresult
     *
     * @mbg.generated Wed Mar 09 17:38:48 CST 2022
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table projectresult
     *
     * @mbg.generated Wed Mar 09 17:38:48 CST 2022
     */
    public ProjectresultExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table projectresult
     *
     * @mbg.generated Wed Mar 09 17:38:48 CST 2022
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table projectresult
     *
     * @mbg.generated Wed Mar 09 17:38:48 CST 2022
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table projectresult
     *
     * @mbg.generated Wed Mar 09 17:38:48 CST 2022
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table projectresult
     *
     * @mbg.generated Wed Mar 09 17:38:48 CST 2022
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table projectresult
     *
     * @mbg.generated Wed Mar 09 17:38:48 CST 2022
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table projectresult
     *
     * @mbg.generated Wed Mar 09 17:38:48 CST 2022
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table projectresult
     *
     * @mbg.generated Wed Mar 09 17:38:48 CST 2022
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table projectresult
     *
     * @mbg.generated Wed Mar 09 17:38:48 CST 2022
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table projectresult
     *
     * @mbg.generated Wed Mar 09 17:38:48 CST 2022
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table projectresult
     *
     * @mbg.generated Wed Mar 09 17:38:48 CST 2022
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table projectresult
     *
     * @mbg.generated Wed Mar 09 17:38:48 CST 2022
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andLinecountIsNull() {
            addCriterion("lineCount is null");
            return (Criteria) this;
        }

        public Criteria andLinecountIsNotNull() {
            addCriterion("lineCount is not null");
            return (Criteria) this;
        }

        public Criteria andLinecountEqualTo(Integer value) {
            addCriterion("lineCount =", value, "linecount");
            return (Criteria) this;
        }

        public Criteria andLinecountNotEqualTo(Integer value) {
            addCriterion("lineCount <>", value, "linecount");
            return (Criteria) this;
        }

        public Criteria andLinecountGreaterThan(Integer value) {
            addCriterion("lineCount >", value, "linecount");
            return (Criteria) this;
        }

        public Criteria andLinecountGreaterThanOrEqualTo(Integer value) {
            addCriterion("lineCount >=", value, "linecount");
            return (Criteria) this;
        }

        public Criteria andLinecountLessThan(Integer value) {
            addCriterion("lineCount <", value, "linecount");
            return (Criteria) this;
        }

        public Criteria andLinecountLessThanOrEqualTo(Integer value) {
            addCriterion("lineCount <=", value, "linecount");
            return (Criteria) this;
        }

        public Criteria andLinecountIn(List<Integer> values) {
            addCriterion("lineCount in", values, "linecount");
            return (Criteria) this;
        }

        public Criteria andLinecountNotIn(List<Integer> values) {
            addCriterion("lineCount not in", values, "linecount");
            return (Criteria) this;
        }

        public Criteria andLinecountBetween(Integer value1, Integer value2) {
            addCriterion("lineCount between", value1, value2, "linecount");
            return (Criteria) this;
        }

        public Criteria andLinecountNotBetween(Integer value1, Integer value2) {
            addCriterion("lineCount not between", value1, value2, "linecount");
            return (Criteria) this;
        }

        public Criteria andFilecountIsNull() {
            addCriterion("fileCount is null");
            return (Criteria) this;
        }

        public Criteria andFilecountIsNotNull() {
            addCriterion("fileCount is not null");
            return (Criteria) this;
        }

        public Criteria andFilecountEqualTo(Integer value) {
            addCriterion("fileCount =", value, "filecount");
            return (Criteria) this;
        }

        public Criteria andFilecountNotEqualTo(Integer value) {
            addCriterion("fileCount <>", value, "filecount");
            return (Criteria) this;
        }

        public Criteria andFilecountGreaterThan(Integer value) {
            addCriterion("fileCount >", value, "filecount");
            return (Criteria) this;
        }

        public Criteria andFilecountGreaterThanOrEqualTo(Integer value) {
            addCriterion("fileCount >=", value, "filecount");
            return (Criteria) this;
        }

        public Criteria andFilecountLessThan(Integer value) {
            addCriterion("fileCount <", value, "filecount");
            return (Criteria) this;
        }

        public Criteria andFilecountLessThanOrEqualTo(Integer value) {
            addCriterion("fileCount <=", value, "filecount");
            return (Criteria) this;
        }

        public Criteria andFilecountIn(List<Integer> values) {
            addCriterion("fileCount in", values, "filecount");
            return (Criteria) this;
        }

        public Criteria andFilecountNotIn(List<Integer> values) {
            addCriterion("fileCount not in", values, "filecount");
            return (Criteria) this;
        }

        public Criteria andFilecountBetween(Integer value1, Integer value2) {
            addCriterion("fileCount between", value1, value2, "filecount");
            return (Criteria) this;
        }

        public Criteria andFilecountNotBetween(Integer value1, Integer value2) {
            addCriterion("fileCount not between", value1, value2, "filecount");
            return (Criteria) this;
        }

        public Criteria andClasscountIsNull() {
            addCriterion("classCount is null");
            return (Criteria) this;
        }

        public Criteria andClasscountIsNotNull() {
            addCriterion("classCount is not null");
            return (Criteria) this;
        }

        public Criteria andClasscountEqualTo(Integer value) {
            addCriterion("classCount =", value, "classcount");
            return (Criteria) this;
        }

        public Criteria andClasscountNotEqualTo(Integer value) {
            addCriterion("classCount <>", value, "classcount");
            return (Criteria) this;
        }

        public Criteria andClasscountGreaterThan(Integer value) {
            addCriterion("classCount >", value, "classcount");
            return (Criteria) this;
        }

        public Criteria andClasscountGreaterThanOrEqualTo(Integer value) {
            addCriterion("classCount >=", value, "classcount");
            return (Criteria) this;
        }

        public Criteria andClasscountLessThan(Integer value) {
            addCriterion("classCount <", value, "classcount");
            return (Criteria) this;
        }

        public Criteria andClasscountLessThanOrEqualTo(Integer value) {
            addCriterion("classCount <=", value, "classcount");
            return (Criteria) this;
        }

        public Criteria andClasscountIn(List<Integer> values) {
            addCriterion("classCount in", values, "classcount");
            return (Criteria) this;
        }

        public Criteria andClasscountNotIn(List<Integer> values) {
            addCriterion("classCount not in", values, "classcount");
            return (Criteria) this;
        }

        public Criteria andClasscountBetween(Integer value1, Integer value2) {
            addCriterion("classCount between", value1, value2, "classcount");
            return (Criteria) this;
        }

        public Criteria andClasscountNotBetween(Integer value1, Integer value2) {
            addCriterion("classCount not between", value1, value2, "classcount");
            return (Criteria) this;
        }

        public Criteria andFunctioncountIsNull() {
            addCriterion("functionCount is null");
            return (Criteria) this;
        }

        public Criteria andFunctioncountIsNotNull() {
            addCriterion("functionCount is not null");
            return (Criteria) this;
        }

        public Criteria andFunctioncountEqualTo(Integer value) {
            addCriterion("functionCount =", value, "functioncount");
            return (Criteria) this;
        }

        public Criteria andFunctioncountNotEqualTo(Integer value) {
            addCriterion("functionCount <>", value, "functioncount");
            return (Criteria) this;
        }

        public Criteria andFunctioncountGreaterThan(Integer value) {
            addCriterion("functionCount >", value, "functioncount");
            return (Criteria) this;
        }

        public Criteria andFunctioncountGreaterThanOrEqualTo(Integer value) {
            addCriterion("functionCount >=", value, "functioncount");
            return (Criteria) this;
        }

        public Criteria andFunctioncountLessThan(Integer value) {
            addCriterion("functionCount <", value, "functioncount");
            return (Criteria) this;
        }

        public Criteria andFunctioncountLessThanOrEqualTo(Integer value) {
            addCriterion("functionCount <=", value, "functioncount");
            return (Criteria) this;
        }

        public Criteria andFunctioncountIn(List<Integer> values) {
            addCriterion("functionCount in", values, "functioncount");
            return (Criteria) this;
        }

        public Criteria andFunctioncountNotIn(List<Integer> values) {
            addCriterion("functionCount not in", values, "functioncount");
            return (Criteria) this;
        }

        public Criteria andFunctioncountBetween(Integer value1, Integer value2) {
            addCriterion("functionCount between", value1, value2, "functioncount");
            return (Criteria) this;
        }

        public Criteria andFunctioncountNotBetween(Integer value1, Integer value2) {
            addCriterion("functionCount not between", value1, value2, "functioncount");
            return (Criteria) this;
        }

        public Criteria andLongestfileIsNull() {
            addCriterion("longestFile is null");
            return (Criteria) this;
        }

        public Criteria andLongestfileIsNotNull() {
            addCriterion("longestFile is not null");
            return (Criteria) this;
        }

        public Criteria andLongestfileEqualTo(String value) {
            addCriterion("longestFile =", value, "longestfile");
            return (Criteria) this;
        }

        public Criteria andLongestfileNotEqualTo(String value) {
            addCriterion("longestFile <>", value, "longestfile");
            return (Criteria) this;
        }

        public Criteria andLongestfileGreaterThan(String value) {
            addCriterion("longestFile >", value, "longestfile");
            return (Criteria) this;
        }

        public Criteria andLongestfileGreaterThanOrEqualTo(String value) {
            addCriterion("longestFile >=", value, "longestfile");
            return (Criteria) this;
        }

        public Criteria andLongestfileLessThan(String value) {
            addCriterion("longestFile <", value, "longestfile");
            return (Criteria) this;
        }

        public Criteria andLongestfileLessThanOrEqualTo(String value) {
            addCriterion("longestFile <=", value, "longestfile");
            return (Criteria) this;
        }

        public Criteria andLongestfileLike(String value) {
            addCriterion("longestFile like", value, "longestfile");
            return (Criteria) this;
        }

        public Criteria andLongestfileNotLike(String value) {
            addCriterion("longestFile not like", value, "longestfile");
            return (Criteria) this;
        }

        public Criteria andLongestfileIn(List<String> values) {
            addCriterion("longestFile in", values, "longestfile");
            return (Criteria) this;
        }

        public Criteria andLongestfileNotIn(List<String> values) {
            addCriterion("longestFile not in", values, "longestfile");
            return (Criteria) this;
        }

        public Criteria andLongestfileBetween(String value1, String value2) {
            addCriterion("longestFile between", value1, value2, "longestfile");
            return (Criteria) this;
        }

        public Criteria andLongestfileNotBetween(String value1, String value2) {
            addCriterion("longestFile not between", value1, value2, "longestfile");
            return (Criteria) this;
        }

        public Criteria andLongestclassIsNull() {
            addCriterion("longestClass is null");
            return (Criteria) this;
        }

        public Criteria andLongestclassIsNotNull() {
            addCriterion("longestClass is not null");
            return (Criteria) this;
        }

        public Criteria andLongestclassEqualTo(String value) {
            addCriterion("longestClass =", value, "longestclass");
            return (Criteria) this;
        }

        public Criteria andLongestclassNotEqualTo(String value) {
            addCriterion("longestClass <>", value, "longestclass");
            return (Criteria) this;
        }

        public Criteria andLongestclassGreaterThan(String value) {
            addCriterion("longestClass >", value, "longestclass");
            return (Criteria) this;
        }

        public Criteria andLongestclassGreaterThanOrEqualTo(String value) {
            addCriterion("longestClass >=", value, "longestclass");
            return (Criteria) this;
        }

        public Criteria andLongestclassLessThan(String value) {
            addCriterion("longestClass <", value, "longestclass");
            return (Criteria) this;
        }

        public Criteria andLongestclassLessThanOrEqualTo(String value) {
            addCriterion("longestClass <=", value, "longestclass");
            return (Criteria) this;
        }

        public Criteria andLongestclassLike(String value) {
            addCriterion("longestClass like", value, "longestclass");
            return (Criteria) this;
        }

        public Criteria andLongestclassNotLike(String value) {
            addCriterion("longestClass not like", value, "longestclass");
            return (Criteria) this;
        }

        public Criteria andLongestclassIn(List<String> values) {
            addCriterion("longestClass in", values, "longestclass");
            return (Criteria) this;
        }

        public Criteria andLongestclassNotIn(List<String> values) {
            addCriterion("longestClass not in", values, "longestclass");
            return (Criteria) this;
        }

        public Criteria andLongestclassBetween(String value1, String value2) {
            addCriterion("longestClass between", value1, value2, "longestclass");
            return (Criteria) this;
        }

        public Criteria andLongestclassNotBetween(String value1, String value2) {
            addCriterion("longestClass not between", value1, value2, "longestclass");
            return (Criteria) this;
        }

        public Criteria andLongestfunctionIsNull() {
            addCriterion("longestFunction is null");
            return (Criteria) this;
        }

        public Criteria andLongestfunctionIsNotNull() {
            addCriterion("longestFunction is not null");
            return (Criteria) this;
        }

        public Criteria andLongestfunctionEqualTo(String value) {
            addCriterion("longestFunction =", value, "longestfunction");
            return (Criteria) this;
        }

        public Criteria andLongestfunctionNotEqualTo(String value) {
            addCriterion("longestFunction <>", value, "longestfunction");
            return (Criteria) this;
        }

        public Criteria andLongestfunctionGreaterThan(String value) {
            addCriterion("longestFunction >", value, "longestfunction");
            return (Criteria) this;
        }

        public Criteria andLongestfunctionGreaterThanOrEqualTo(String value) {
            addCriterion("longestFunction >=", value, "longestfunction");
            return (Criteria) this;
        }

        public Criteria andLongestfunctionLessThan(String value) {
            addCriterion("longestFunction <", value, "longestfunction");
            return (Criteria) this;
        }

        public Criteria andLongestfunctionLessThanOrEqualTo(String value) {
            addCriterion("longestFunction <=", value, "longestfunction");
            return (Criteria) this;
        }

        public Criteria andLongestfunctionLike(String value) {
            addCriterion("longestFunction like", value, "longestfunction");
            return (Criteria) this;
        }

        public Criteria andLongestfunctionNotLike(String value) {
            addCriterion("longestFunction not like", value, "longestfunction");
            return (Criteria) this;
        }

        public Criteria andLongestfunctionIn(List<String> values) {
            addCriterion("longestFunction in", values, "longestfunction");
            return (Criteria) this;
        }

        public Criteria andLongestfunctionNotIn(List<String> values) {
            addCriterion("longestFunction not in", values, "longestfunction");
            return (Criteria) this;
        }

        public Criteria andLongestfunctionBetween(String value1, String value2) {
            addCriterion("longestFunction between", value1, value2, "longestfunction");
            return (Criteria) this;
        }

        public Criteria andLongestfunctionNotBetween(String value1, String value2) {
            addCriterion("longestFunction not between", value1, value2, "longestfunction");
            return (Criteria) this;
        }

        public Criteria andProjectcomplexityIsNull() {
            addCriterion("projectComplexity is null");
            return (Criteria) this;
        }

        public Criteria andProjectcomplexityIsNotNull() {
            addCriterion("projectComplexity is not null");
            return (Criteria) this;
        }

        public Criteria andProjectcomplexityEqualTo(String value) {
            addCriterion("projectComplexity =", value, "projectcomplexity");
            return (Criteria) this;
        }

        public Criteria andProjectcomplexityNotEqualTo(String value) {
            addCriterion("projectComplexity <>", value, "projectcomplexity");
            return (Criteria) this;
        }

        public Criteria andProjectcomplexityGreaterThan(String value) {
            addCriterion("projectComplexity >", value, "projectcomplexity");
            return (Criteria) this;
        }

        public Criteria andProjectcomplexityGreaterThanOrEqualTo(String value) {
            addCriterion("projectComplexity >=", value, "projectcomplexity");
            return (Criteria) this;
        }

        public Criteria andProjectcomplexityLessThan(String value) {
            addCriterion("projectComplexity <", value, "projectcomplexity");
            return (Criteria) this;
        }

        public Criteria andProjectcomplexityLessThanOrEqualTo(String value) {
            addCriterion("projectComplexity <=", value, "projectcomplexity");
            return (Criteria) this;
        }

        public Criteria andProjectcomplexityLike(String value) {
            addCriterion("projectComplexity like", value, "projectcomplexity");
            return (Criteria) this;
        }

        public Criteria andProjectcomplexityNotLike(String value) {
            addCriterion("projectComplexity not like", value, "projectcomplexity");
            return (Criteria) this;
        }

        public Criteria andProjectcomplexityIn(List<String> values) {
            addCriterion("projectComplexity in", values, "projectcomplexity");
            return (Criteria) this;
        }

        public Criteria andProjectcomplexityNotIn(List<String> values) {
            addCriterion("projectComplexity not in", values, "projectcomplexity");
            return (Criteria) this;
        }

        public Criteria andProjectcomplexityBetween(String value1, String value2) {
            addCriterion("projectComplexity between", value1, value2, "projectcomplexity");
            return (Criteria) this;
        }

        public Criteria andProjectcomplexityNotBetween(String value1, String value2) {
            addCriterion("projectComplexity not between", value1, value2, "projectcomplexity");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table projectresult
     *
     * @mbg.generated do_not_delete_during_merge Wed Mar 09 17:38:48 CST 2022
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table projectresult
     *
     * @mbg.generated Wed Mar 09 17:38:48 CST 2022
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}